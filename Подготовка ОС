Установка Ubuntu Server minimized

Open SSH server  -  установка вместе с ОС

Предварительные действия
cat <<EOF | tee /etc/netplan/00-installer-config.yaml
network:
  ethernets:
    enp0s3:
      dhcp4: false
      addresses:
        - 192.168.101.101/24
      routes:
        - to: default
          via: 192.168.101.1
      nameservers:
        addresses:
          - 192.168.101.1
  version: 2
EOF

netplan apply

hostnamectl set-hostname node1.local

/etc/resolv.conf добавляем DNS server
cat <<EOF | tee /etc/resolv.conf
nameserver 192.168.101.1
EOF

Добавление имен в /etc/hosts
cat <<EOF | tee /etc/hosts
127.0.0.1  localhost
# k8s cluster nodes
192.168.101.101  node1.local
192.168.101.102  node2.local
192.168.101.103  node3.local
EOF
----------------------------
    На всех машинах, где будет установлен кластер kubernetes, необходимо:

Отключить swap.
Отключить firewall.
Отключить selinux.
Настроить параметры ядра.
Установить приложения.

    В файле /etc/fstab закоментируйте строку, определяющую подключение swap пространства.
swapoff -a

    Отключить firewall
systemctl stop firewalld
systemctl disable firewalld

    Убедитесь, что в фаерволе нет правил и установлены политики по умолчанию ACCEPT:
iptables -L -n
iptables -t nat -L -n
iptables -t mangle -L -n
iptables -t raw -L -n 

    Настроить параметры ядра

modprobe overlay
modprobe br_netfilter

    атем добавьте файл /etc/modules-load.d/modules-kubernetes.conf:
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

    В файл /etc/sysctl.conf добавтье следующие строки:
cat <<EOF | tee /etc/sysctl.conf
net.ipv4.ip_forward=1
net.bridge.bridge-nf-call-iptables=1
net.ipv4.ip_nonlocal_bind=1
EOF
-----------------------------
    Установка приложений

    Подготовка для установки containerd
(https://kubernetes.io/docs/setup/production-environment/container-runtimes/)

cat <<EOF | tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sudo sysctl --system

Убедитесь, что br_netfilterмодули overlayзагружены, выполнив следующие команды:

lsmod | grep br_netfilter
lsmod | grep overlay

Убедитесь, что системные переменные net.bridge.bridge-nf-call-iptables, net.bridge.bridge-nf-call-ip6tablesи в вашей конфигурации net.ipv4.ip_forwardустановлены , выполнив следующую команду:1sysctl

sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward

--------------
    Обязательные:
bash-completion python3 tar containerd nfs-utils chrony kubectl kubelet kubeadm

    Ссылка на установку для Debian (https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/)

sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update

apt-get install -y bash-completion
apt-get install -y python3
apt-get install -y tar
apt-get install -y containerd
apt-get install -y nfs-utils
apt-get install -y chrony
apt-get install -y kubelet kubeadm kubectl


    Не обязательные:
apt-get install -y mc
apt-get install -y nano
apt-get install -y iputils-ping
apt-get install -y git
apt-get install -y rsyslog
----------------------------
    Запуск необходимых сервисов
    NTP
Включаем NTP. Синхронизация времени на серверах кластера обязательна. Если её не включить возможны проблемы с сертификатами.

systemctl enable chronyd
systemctl start chronyd
systemctl status chronyd

    syslog
Опционально включаем систему логирования rsyslog. Я предпочитаю смотреть текстовые логфайлы классического syslog, а не копаться в бинарниках systemd. Да и потом логи системы будет легче собирать.

systemctl enable rsyslog
systemctl start rsyslog
systemctl status rsyslog

  containerd
(https://github.com/kubernetes-sigs/cri-tools/blob/master/docs/crictl.md) - ссылка на установку
(https://kubernetes.io/docs/tasks/debug/debug-cluster/crictl/) - ссылка на дебаг  в кубернетес
Система контейнеризации containerd.

systemctl enable containerd
systemctl start containerd
systemctl status containerd

Добавим конфигурационный файл /etc/crictl.yaml для приложения управления контейнерами crictl:

touch  /etc/crictl.yaml
cat <<EOF | tee /etc/crictl.yaml
runtime-endpoint: unix:///run/containerd/containerd.sock
image-endpoint: unix:///run/containerd/containerd.sock
timeout: 2
debug: true
pull-image-on-create: false
EOF

    Проверим работоспособность утилиты:

crictl images
crictl ps -a
